server.port=8089

mybatis.mapperLocations=classpath:mappers/*.xml

spring.profiles.active=dev


spring.datasource.driverClassName=com.mysql.jdbc.Driver
spring.datasource.type=com.alibaba.druid.pool.DruidDataSource
spring.datasource.initialSize=1
spring.datasource.minIdle=3
spring.datasource.maxActive=20
spring.datasource.maxWait=60000
#配置一个连接在池中最小生存时间，单位是毫秒
spring.datasource.minEvictableIdleTimeMillis=300000
spring.datasource.timeBetweenEvictionRunsMillis=60000
spring.datasource.validationQuery=SELECT 1 FROM DUAL
spring.datasource.testWhileIdle=true
spring.datasource.testOnBorrow=false
spring.datasource.testOnReturn=false
# 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
spring.datasource.filters=stat,wall,logback
# 打开PSCache，并且指定每个连接上PSCache的大小
spring.datasource.poolPreparedStatements=true
spring.datasource.maxPoolPreparedStatementPerConnectionSize=20
# 通过connectProperties属性来打开mergeSql功能；慢SQL记录
spring.datasource.connectionProperties=druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
# 合并多个DruidDataSource的监控数据
spring.datasource.useGlobalDataSourceStat=true

#mybatis打印sql,二选一
#mybatis.configuration.log-impl= org.apache.ibatis.logging.stdout.StdOutImpl

logging.level.com.nxl.dao=debug

using.shiro.redis=true

spring.redisson.address=localhost:6379
spring.redisson.host=localhost
spring.redisson.port=6379
spring.redisson.password=
spring.redisson.connectionPoolSize=4
spring.redisson.connectionMinimumIdleSize=1
spring.redisson.timeout=3000
spring.redisson.connectTimeout=3000
spring.redisson.expire=1800

shiro.sessionid.cookie.name=SHIROJSESSIONID
##spring.shiro.cache.type=cache_redis
#spring.shiro.cache.type=cache_default
#
##Cas服务器地址
#cas.casServerUrlPrefix=http://127.0.0.1:8080/cas
##Cas登录页面地址
#cas.casLoginUrl=${cas.casServerUrlPrefix}/login
##Cas登出页面地址
#cas.casLogoutUrl=${cas.casServerUrlPrefix}/logout
##当前工程对外提供的服务地址
#cas.shiroServerUrlPrefix=http://localhost:8089
##casFilter UrlPattern
#cas.casFilterUrlPattern=/cas
##登录地址shiroServerUrlPrefix
#cas.loginUrl=${cas.casLoginUrl}?service=${cas.shiroServerUrlPrefix}${cas.casFilterUrlPattern}
##登出地址
#cas.logoutUrl=${cas.casServerUrlPrefix}/logout?service=${cas.shiroServerUrlPrefix}${cas.casFilterUrlPattern}
##登录成功跳转地址
#cas.loginSuccessUrl=/gotoSuccess
##权限认证失败跳转地址
##cas.unauthorizedUrl=/unauth
